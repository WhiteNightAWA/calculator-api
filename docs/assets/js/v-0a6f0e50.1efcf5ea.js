"use strict";(self.webpackChunkvuepress_starter=self.webpackChunkvuepress_starter||[]).push([[887],{810:(a,n,s)=>{s.r(n),s.d(n,{data:()=>t});const t={key:"v-0a6f0e50",path:"/GUIDE/QuickStart.html",title:"Quick Started",lang:"en",frontmatter:{prev:{text:"Installation",link:"/GUIDE/Installation.md"},next:{text:"Home",link:"/"}},excerpt:"",headers:[{level:2,title:"Calculator",slug:"calculator",children:[]},{level:2,title:"Formula",slug:"formula",children:[]}],filePathRelative:"GUIDE/QuickStart.md",git:{updatedTime:1631806903e3,contributors:[{name:"White_Night_awa",email:"s121101.evantang.2015@gmail.com",commits:1}]}}},55:(a,n,s)=>{s.r(n),s.d(n,{default:()=>e});const t=(0,s(252).uE)('<h1 id="quick-started" tabindex="-1"><a class="header-anchor" href="#quick-started" aria-hidden="true">#</a> Quick Started</h1><h2 id="calculator" tabindex="-1"><a class="header-anchor" href="#calculator" aria-hidden="true">#</a> Calculator</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> whiteCalculator <span class="token keyword">import</span> Calculator <span class="token comment"># import the Calculator</span>\nc <span class="token operator">=</span> Calculator<span class="token punctuation">(</span><span class="token punctuation">)</span>\nans <span class="token operator">=</span> c<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token string">&quot;1+1&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span>  <span class="token comment"># Output: 2</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="you-can-use-this-as-your-calculator" tabindex="-1"><a class="header-anchor" href="#you-can-use-this-as-your-calculator" aria-hidden="true">#</a> You can use this as your calculator:</h4><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token string">&quot;50pi(99^6)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># Output: 147887356042940.12</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token string">&quot;Ans/4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># Output: 36971839010735.03</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li><a href="">Config of Calculator</a></li><li><a href="">All Symbol you can use Calculator</a></li></ul><h2 id="formula" tabindex="-1"><a class="header-anchor" href="#formula" aria-hidden="true">#</a> Formula</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> whiteCalculator <span class="token keyword">import</span> Formula <span class="token comment"># import the Formulas</span>\nans <span class="token operator">=</span> Formula<span class="token punctuation">.</span>PythagorasTheorem<span class="token punctuation">.</span>getC<span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span>  <span class="token comment"># Output: 5</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="you-can-even-calculate-it-like-this" tabindex="-1"><a class="header-anchor" href="#you-can-even-calculate-it-like-this" aria-hidden="true">#</a> You can even calculate it like this:</h4><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>ans <span class="token operator">=</span> Formula<span class="token punctuation">.</span>LF<span class="token punctuation">.</span>getF<span class="token punctuation">(</span>u<span class="token operator">=</span><span class="token string">&quot;2^3&quot;</span><span class="token punctuation">,</span> v<span class="token operator">=</span><span class="token string">&quot;âˆš(4)&quot;</span><span class="token punctuation">)</span> <span class="token comment"># LF == LensFormula</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span>  <span class="token comment"># Output: 1.6</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li><a href="">List of Formula</a></li></ul>',11),e={render:function(a,n){return t}}}}]);